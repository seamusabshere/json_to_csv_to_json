#!/usr/bin/env ruby
ARGV[0] or "give me a json to convert to csv!"
NEWLINE_DELIMITED = ARGV.include?('--newline-delimited')

require 'csv'
require 'set'
require 'json'

def clean(v)
  case v
  when Hash
    # give up, double encode
    JSON.dump v
  when Array
    v.map { |vv| clean vv }.join ','
  when String
    memo = v.strip
    memo.empty? ? nil : memo
  else
    v
  end
end

if NEWLINE_DELIMITED
  File.open(ARGV[0]) do |f|
    count = 0
    headers = Set.new
    while line = f.gets
      count += 1
      break if count > 1000
      headers += JSON.parse(line).keys
    end
    headers = headers.to_a
    puts headers.to_csv
    f.rewind
    while line = f.gets
      v = JSON.parse line
      puts v.values_at(*headers).map { |vv| clean vv }.to_csv
    end
  end
else
  blob = JSON.parse(IO.read(ARGV[0]))
  headers = Set.new
  blob.each do |_, v|
    headers += v.keys
  end
  headers = headers.to_a
  puts (['k'] + headers).to_csv
  blob.each do |k, v|
    memo = v.values_at(*headers).map { |vv| clean vv }
    puts ([k] + memo).to_csv
  end
end
